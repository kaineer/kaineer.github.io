<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Тег: ruby | Caramel sepulcrum]]></title>
  <link href="http://kaineer.info/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://kaineer.info/"/>
  <updated>2016-03-29T21:15:47+05:00</updated>
  <id>http://kaineer.info/</id>
  <author>
    <name><![CDATA[Tangerine Cat]]></name>
    <email><![CDATA[kaineer@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Минутка ненависти]]></title>
    <link href="http://kaineer.info/blog/2013/01/25/rage-minute/"/>
    <updated>2013-01-25T18:43:00+06:00</updated>
    <id>http://kaineer.info/blog/2013/01/25/rage-minute</id>
    <content type="html"><![CDATA[<p>Внезапно обнаружил, что точка входа в ruby-объект может находиться в <s>жо</s> не совсем
подходящем месте, а именно, в <code>private</code> секции:</p>

<pre><code class="ruby">class PrivateMethodMissing
  private

  def method_missing(sym, *args)
    puts "Hello, it's me, #{sym}!"
  end
end

PrivateMethodMissing.new.bar
</code></pre>

<p>Всех, кто при мне будет пользоваться этим &ldquo;умным способом&rdquo;, буду дварковать.
Да-да, влендишным способом.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Caller &amp; Pry]]></title>
    <link href="http://kaineer.info/blog/2011/12/12/caller-and-pry/"/>
    <updated>2011-12-12T14:09:00+06:00</updated>
    <id>http://kaineer.info/blog/2011/12/12/caller-and-pry</id>
    <content type="html"><![CDATA[<p>Когда у меня отказывают мозги, я берусь за отладчик.
Если бы не необходимость писать код, я бы из него не вылезал вообще.
И отсутствие толкового отладчика в Ruby меня до сих пор очень расстраивает.</p>

<!-- more -->


<p>Представим себе ситуацию: в трёх практически одинаковых контроллерах по
совершенно идентичному набору параметров производятся абсолютно одинаковые
действия. Результат этих действий - заполненная этими действиями форма добавления
объекта в таблицу. Десять отличий между тремя вариантами найдены, вынесены в параметры,
всё отлично заполняется, но: в двух случаях заполненные данные попадают куда надо,
в третьем - хрррррр!</p>

<p>Начинаем копать всякие before_filter, фильтры в самой модели - ничего.</p>

<p>Отладчика, которым мне не больно и не противно было бы пользоваться, в наличии нет.
(Любители IDE идут в обнимку с их IDE куда-нибудь, где java не тормозит под убунтой).</p>

<p>Итак, отладчика нет, а брэйкпоинт поставить надо. Аккуратно добавляем в исследуемую модель
конструктор:</p>

<p><figure class='code'><figcaption><span>weird_model.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>и, как только pry выбрасывает нас в консоль, смотрим значение, возвращаемое caller.</p>

<p>В результате выяснилось, что второй экземпляр модели создавался во вьюхе.
Баг пофикшен, блогпост написан, кому уходит луч поноса - тоже ясно.</p>

<p>Осталось вычистить все binding.pry и всю байду, которую добавил в процессе отладки.</p>

<h2>Список используемой литературы</h2>

<ul>
<li><a href="http://pry.github.com/">PRY: Get to the code</a></li>
<li><a href="http://www.ruby-lang.org/en/">Ruby. A Programmer&rsquo;s Best Friend</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
